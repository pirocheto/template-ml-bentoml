[tool.poetry]
name = "{{cookiecutter.project_name}}"
version = "0.1.0"
description = "{{cookiecutter.description}}"
authors = ["{{cookiecutter.author_name}}"]

[tool.poetry.dependencies]
python = "^3.10"
mlem = "^0.4.5"
pandas = "^1.5.3"
scikit-learn = "1.2.0"
bentoml = "^1.0.15"

[tool.poetry.group.dev.dependencies]
black = "^22.12.0"
mypy = "^0.991"
pytest = "^7.2.0"
pylint = "^2.14.2"
flake8 = "^6.0.0"
flake8-docstrings = "^1.6.0"
pre-commit = "^2.20.0"
coverage = "^7.2.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 119

[tool.pylint.'MESSAGES CONTROL']
max-line-length = 119
disable = [
    "too-many-arguments",
    "missing-module-docstring",
    "missing-function-docstring",
    "missing-class-docstring",
    "too-few-public-methods",
]

[tool.mypy]
python_version = "3.10"

[[tool.mypy.overrides]]
module = "app.service"
ignore_errors = true

[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true

[tool.isort]
line_length = 119
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.pytest.ini_options]
addopts = "-p no:warnings"
testpaths = [
    "tests"
]
